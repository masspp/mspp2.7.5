//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.261
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ResamplingPlugin {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ResamplingPlugin.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Open dialog to set resampling parameters. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_BTN_RESAMPLING {
            get {
                return ResourceManager.GetString("HELP_MEG_BTN_RESAMPLING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sampling intervals are set to the average interval among all selected spectra. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_RBN_AVERAGE {
            get {
                return ResourceManager.GetString("HELP_MEG_RBN_AVERAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Linear interpolation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_RBN_LINEAR {
            get {
                return ResourceManager.GetString("HELP_MEG_RBN_LINEAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sampling intervals are set to the minimum interval among all selected spectra. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_RBN_MINIMUM {
            get {
                return ResourceManager.GetString("HELP_MEG_RBN_MINIMUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select operation type. Average = (Spec1 + Spec2 + …)/n, Sum = (Spec1 + Spec2 + …), Subtract =  (Spec2 - Spec1, Spec3 – Spec1, …), Div =  (Spec2 / Spec1, Spec3 / Spec1, …) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_RBN_OPERATION_SETTINGS {
            get {
                return ResourceManager.GetString("HELP_MEG_RBN_OPERATION_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PCHIP (Piecewise cubic Hermite interpolation) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_RBN_PCHIP {
            get {
                return ResourceManager.GetString("HELP_MEG_RBN_PCHIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sampling points of all spectra are taken at equal intervals. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_RBN_REGULAR {
            get {
                return ResourceManager.GetString("HELP_MEG_RBN_REGULAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sampling points of all spectra are matched to those of the first spectrum. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_RBN_SAME {
            get {
                return ResourceManager.GetString("HELP_MEG_RBN_SAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sampling intervals are set to specified interval. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_RBN_SPECIFIED {
            get {
                return ResourceManager.GetString("HELP_MEG_RBN_SPECIFIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output range of resampled spectra に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_TXT_OUTPUTRANGE {
            get {
                return ResourceManager.GetString("HELP_MEG_TXT_OUTPUTRANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sampling intervals are set to specified interval. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MEG_TXT_SPECIFIED {
            get {
                return ResourceManager.GetString("HELP_MEG_TXT_SPECIFIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select target specra by MS files, RT, and precursor mass. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MSG__RTmzGRID_SPECTRUM {
            get {
                return ResourceManager.GetString("HELP_MSG__RTmzGRID_SPECTRUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select target specra by MS files and Spectrum names. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MSG__SCANNAMEGRID_SPECTRUM {
            get {
                return ResourceManager.GetString("HELP_MSG__SCANNAMEGRID_SPECTRUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Target spectra are selected from MS files by RT and precursor mass. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MSG_RBN_RTMZ {
            get {
                return ResourceManager.GetString("HELP_MSG_RBN_RTMZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Target spectra are selected from MS files by Spectrum names. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HELP_MSG_RBN_SELECT_SPECTRA_BY {
            get {
                return ResourceManager.GetString("HELP_MSG_RBN_SELECT_SPECTRA_BY", resourceCulture);
            }
        }
    }
}
